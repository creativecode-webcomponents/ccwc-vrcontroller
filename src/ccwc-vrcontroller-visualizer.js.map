{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/ccwc-vrcontroller-visualizer.es6","src/devices/device.es6","src/devices/laptop.es6","src/devices/simulator.es6","src/devices/tisensortag.es6","src/math/quaternion.es6","src/math/util.es6","src/math/vector3.es6","src/sensorfusion/complementary-filter.es6","src/sensorfusion/config.es6","src/sensorfusion/fusion-pose-sensor.es6","src/sensorfusion/pose-predictor.es6","src/sensorfusion/sensor-sample.es6"],"names":[],"mappings":"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","file":"ccwc-vrcontroller-visualizer.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import TISensorTag from './devices/tisensortag.es6';\nimport Simulator from './devices/simulator.es6';\nimport Laptop from './devices/laptop.es6';\n\n/**\n * Sensor tag visualizer component\n */\nexport default class extends HTMLElement {\n    /**\n     * initialize default class properties\n     * @private\n     */\n    setProperties() {\n        /**\n         * sensor\n         * @type {Device}\n         */\n        this._sensor = null;\n\n        /**\n         * sensor type\n         * @type {String}\n         */\n        this._sensorType = 'none';\n\n        /**\n         * sample data for simulator\n         * @type {String}\n         */\n        this._sampleData = '';\n\n        /**\n         * 3D cursor (cube thingy) to control with sensor input\n         * @type {null}\n         */\n        this.cursor = null;\n\n        /**\n         * three renderer\n         * @type {null}\n         */\n        this.renderer = null;\n\n        /**\n         * three scene\n         * @type {null}\n         */\n        this.scene = null;\n\n        /**\n         * three camera\n         * @type {null}\n         */\n        this.camera = null;\n    }\n\n    /**\n     * on sensor update\n     * @param data\n     */\n    onSensorUpdate(eventtype, data) {\n        if (data.sensors.orientation) {\n            this.axes.quaternion.fromArray(data.sensors.orientation);\n            this.cursor.quaternion.fromArray(data.sensors.orientation);\n        }\n    }\n\n    /**\n     * connect to sensortag\n     */\n    connect(sensor) {\n        if (sensor) {\n            this._sensor = sensor;\n        } else {\n            switch (this._sensorType) {\n                case 'simulator':\n                    if (this._sampleData) {\n                        var xobj = new XMLHttpRequest();\n                        xobj.open('GET', this._sampleData, true);\n                        xobj.onreadystatechange = () => {\n                            if (xobj.readyState == 4 && xobj.status == '200') {\n                                this._sensor = new Simulator(JSON.parse(xobj.responseText).samples);\n                                this._sensor.connect( (eventtype, data) => this.onSensorUpdate(eventtype, data));\n                            }\n                        };\n                        xobj.send(null);\n                    } else {\n                        throw new Error('Simulator requires using sampledata parameter to pass in a URI with samples');\n                    }\n                    break;\n\n                case 'laptop':\n                    this._sensor = new Laptop();\n                    this._sensor.connect( (eventtype, data) => this.onSensorUpdate(eventtype, data));\n                    break;\n\n                case 'tisensortag':\n                    this._sensor = new TISensorTag();\n                    this._sensor.connect( (eventtype, data) => this.onSensorUpdate(eventtype, data));\n                    break;\n\n                case 'webvr':\n                    navigator.getVRDisplays().then( displays => {\n                        this.display = displays[0];\n                    });\n                    break;\n            }\n        }\n    }\n\n    /**\n     * parse attributes on element\n     * @private\n     */\n    parseAttributes() {\n        if (this.hasAttribute('sensor')) {\n            this._sensorType = this.getAttribute('sensor');\n        }\n\n        if (this.hasAttribute('sampledata')) {\n            this._sampleData = this.getAttribute('sampledata');\n        }\n    };\n\n    /**\n     * element created callback\n     * @private\n     */\n    createdCallback() {\n        this.setProperties();\n        this.parseAttributes();\n    };\n\n    /**\n     * element attached callback\n     * @private\n     */\n    attachedCallback() {\n        let template = this.owner.querySelector('template');\n        let clone = template.content.cloneNode(true);\n        this.root = this.createShadowRoot();\n        this.root.appendChild(clone);\n\n        this.dom = {};\n        this.dom.scene = this.root.querySelector('.threecontainer');\n        setTimeout( () => {\n            this.init3DScene();\n            this.render();\n        }, 100);\n    }\n\n    /**\n     * render\n     */\n    render() {\n        this.renderer.render( this.scene, this.camera );\n        window.requestAnimationFrame(e => this.render());\n    }\n\n    /**\n     * initialize 3D scene\n     */\n    init3DScene() {\n        this.scene = new THREE.Scene();\n        var SCREEN_WIDTH = this.offsetWidth, SCREEN_HEIGHT = this.offsetHeight;\n        var VIEW_ANGLE = 45, ASPECT = SCREEN_WIDTH / SCREEN_HEIGHT, NEAR = 0.1, FAR = 20000;\n        this.camera = new THREE.PerspectiveCamera( VIEW_ANGLE, ASPECT, NEAR, FAR);\n        this.scene.add(this.camera);\n        this.camera.position.set(0,150,400);\n        this.camera.lookAt(this.scene.position);\n        this.renderer = new THREE.WebGLRenderer( {antialias:true} );\n        this.renderer.setSize(SCREEN_WIDTH, SCREEN_HEIGHT);\n        this.dom.scene.appendChild( this.renderer.domElement );\n\n        var light = new THREE.PointLight(0xffffff);\n        light.position.set(100,250,100);\n        this.scene.add(light);\n\n        // SKYBOX\n        var skyBoxGeometry = new THREE.CubeGeometry( 10000, 10000, 10000 );\n        var skyBoxMaterial = new THREE.MeshBasicMaterial( { color: 0x9999ff, side: THREE.BackSide } );\n        var skyBox = new THREE.Mesh( skyBoxGeometry, skyBoxMaterial );\n        this.scene.add(skyBox);\n\n        var geom = new THREE.CubeGeometry( 30, 32, 16 );\n        var material = new THREE.MeshLambertMaterial( { color: 0xff0000 } );\n        this.cursor = new THREE.Mesh( geom, material );\n        this.cursor.position.set(40,40,40);\n        this.scene.add(this.cursor);\n\n        this.axes = new THREE.AxisHelper(50);\n        this.axes.position.set(this.cursor.position.x, this.cursor.position.y, this.cursor.position.z);\n        this.scene.add(this.axes);\n\n        var gridXZ = new THREE.GridHelper(200, 10);\n        this.scene.add(gridXZ);\n    }\n\n    /**\n     * element detached callback\n     * @private\n     */\n    detachedCallback() {};\n\n\n    /**\n     * attributeChangedCallback\n     * @private\n     * @param {String} attr attribute changed\n     * @param {*} oldVal old value\n     * @param {*} newVal new value\n     */\n    attributeChangedCallback(attr, oldVal, newVal) {};\n}","import SensorFusion from '../sensorfusion/fusion-pose-sensor.es6';\n\nexport default class {\n    constructor() {\n        /**\n         * sensor fusion\n         */\n        this._sensorfusion = new SensorFusion();\n\n        /**\n         * if already connected\n         * @type {Boolean}\n         */\n        this._connected = false;\n\n        /**\n         * event listeners\n         * @type {Array}\n         * @private\n         */\n        this._eventListeners = [];\n    }\n\n    /**\n     * connect to sensortag\n     * @param cb callback\n     */\n    connect(cb) {\n        this._eventListeners.push(cb);\n        if (this._connected) { return; }\n    }\n\n    /**\n     * disconnect\n     * @param cb\n     */\n    disconnect(cb) {\n        for (var c = 0; c < this._eventListeners.length; c++) {\n            if (this._eventListeners[c] === cb) {\n                this._eventListeners.splice(c, 1);\n            }\n        }\n    }\n\n    /**\n     * update listeners with data\n     * @param data\n     */\n    update(data) {\n        if (data.sensors && data.sensors.accelerometer && data.sensors.gyroscope) {\n            this._sensorfusion.updateSensorData(data);\n            data.sensors.orientation = this._sensorfusion.getOrientation();\n            for (var c = 0; c < this._eventListeners.length; c++) {\n                this._eventListeners[c]('motionupdate', data);\n            }\n        }\n    }\n}","import Device from './device.es6';\n\nexport default class extends Device {\n    constructor() {\n        super();\n    }\n\n    /**\n     * connect to sensortag\n     * @param cb callback\n     */\n    connect(cb) {\n        super.connect(cb);\n        window.addEventListener('devicemotion', event => this.onMotionEvent(event) );\n    }\n\n    /**\n     * disconnect\n     * @param cb\n     */\n    disconnect(cb) {\n        super.disconnect(cb);\n        if (this._eventListeners.length === 0) {\n            window.removeEventListener('devicemotion', event => this.onMotionEvent(event));\n        }\n    }\n\n    /**\n     * on motion event\n     * @param event\n     */\n    onMotionEvent(event) {\n        var data = {\n            sensors: {\n                interval: event.interval,\n                timestamp: event.timeStamp,\n                accelerometer: {\n                    x: event.accelerationIncludingGravity.x,\n                    y: event.accelerationIncludingGravity.y,\n                    z: event.accelerationIncludingGravity.z\n                },\n                gyroscope: {\n                    alpha: event.rotationRate.alpha,\n                    beta: event.rotationRate.beta,\n                    gamma: event.rotationRate.gamma\n                }\n            }\n        };\n        this.update(data);\n    }\n}","import Device from './device.es6';\n\nexport default class extends Device {\n    constructor(sampledata) {\n        super();\n        this.data = sampledata;\n\n        /**\n         * index of current sensor snapshot in sim mode\n         * @type {number}\n         * @private\n         */\n        this._simIndex = 0;\n    }\n\n    /**\n     * set data\n     * @param sampledata\n     */\n    set data(sampledata) {\n        this._data = sampledata;\n        var intervalTTL = 0;\n        for (var c = 0; c < this._data.length; c++) {\n            intervalTTL += this._data[c].interval;\n        }\n        this._refreshInterval = intervalTTL / this._data.length;\n    }\n\n    /**\n     * connect to sensortag\n     * @param cb callback\n     */\n    connect(cb) {\n        super.connect(cb);\n        this.interval = setInterval( () => {\n            this.update(this.getSimulatedSensors());\n        }, this._refreshInterval);\n    }\n\n    /**\n     * disconnect\n     * @param cb\n     */\n    disconnect(cb) {\n        super.disconnect(cb);\n        clearInterval(this.interval);\n    }\n\n    /**\n     * get simulated sensor data object\n     */\n    getSimulatedSensors() {\n        var sim = {\n            connected: true,\n            device: {\n                systemid: 'xxxxx',\n                firmware: 'xxxxx',\n                manufacturer: 'xxxxx'\n            }\n        };\n        var accelerometer = this._data[this._simIndex].accelerometer;\n        var gyroscope = this._data[this._simIndex].gyroscope;\n\n        sim.sensors = {\n            interval: this._data[this._simIndex].interval,\n            timestamp: this._data[this._simIndex].timestamp,\n            accelerometer: {\n                x: accelerometer.x,\n                y: accelerometer.y,\n                z: accelerometer.z\n            },\n            gyroscope: {\n                alpha: gyroscope.alpha,\n                beta: gyroscope.beta,\n                gamma: gyroscope.gamma\n            }\n        };\n        this._simIndex ++;\n        if (this._simIndex >= this._data.length) {\n            this._simIndex = 0;\n        }\n        return sim;\n    }\n\n    /**\n     * get simulated button data object\n     */\n    getSimulatedButtons() {\n        var data = this.getSimulatedSensors();\n        data.sensors.buttons = { active: true, enabled: true };\n        data.sensors.buttons.left = Math.random() > .5;\n        data.sensors.buttons.right = Math.random() > .5;\n        return data;\n    }\n}","import Device from './device.es6';\n\nexport default class extends Device {\n    constructor() {\n        super();\n        /**\n         * socket connection\n         * @type {null}\n         */\n        this.socket = null;\n\n        /**\n         * if already connected\n         * @type {Boolean}\n         */\n        this._connected = false;\n\n        /**\n         * base UUID\n         */\n        this._baseUUID = ['f000', '-0451-4000-b000-000000000000'];\n\n        /**\n         * service UUIDS\n         * @type {{}}\n         * @private\n         */\n        this._uuid = {};\n        this._uuid.temperature = this._baseUUID[0] + 'aa00' + this._baseUUID[1];\n        this._uuid.temperatureData = this._baseUUID[0] + 'aa01' + this._baseUUID[1];\n        this._uuid.temperatureConfiguration = this._baseUUID[0] + 'aa02' + this._baseUUID[1];\n        this._uuid.temperaturePeriod = this._baseUUID[0] + 'aa03' + this._baseUUID[1];\n\n        this._uuid.accelerometer = this._baseUUID[0] + 'aa10' + this._baseUUID[1];\n        this._uuid.accelerometerData = this._baseUUID[0] + 'aa11' + this._baseUUID[1];\n        this._uuid.accelerometerConfiguration = this._baseUUID[0] + 'aa12' + this._baseUUID[1];\n        this._uuid.accelerometerPeriod = this._baseUUID[0] + 'aa13' + this._baseUUID[1];\n\n        this._uuid.humidity = this._baseUUID[0] + 'aa20' + this._baseUUID[1];\n        this._uuid.humidityData = this._baseUUID[0] + 'aa21' + this._baseUUID[1];\n        this._uuid.humidityConfiguration = this._baseUUID[0] + 'aa22' + this._baseUUID[1];\n        this._uuid.humidityPeriod = this._baseUUID[0] + 'aa23' + this._baseUUID[1];\n    }\n\n    /**\n     * connect to sensortag\n     * @param cb callback\n     */\n    connect(cb) {\n        this._eventListeners.push(cb);\n        if (this._connected) { return; }\n        this.connected = true;\n\n        if (!navigator.bluetooth) {\n            console.log('no bluetooth support in your browser, trying websockets from a local node server');\n            this.socket = new WebSocket('ws://localhost:8080');\n            this.socket.onerror = function (error) { console.log('WebSocket Error ' + error); };\n\n            this.socket.onmessage = (e) => {\n                var msg = JSON.parse(e.data);\n                this.update(msg);\n            };\n\n            this.socket.onopen = (e) => {\n                this.socket.send('connect');\n            }\n\n        } else {\n            navigator.bluetooth.requestDevice(\n                {   filters: [ {name: 'SensorTag'}, { services: [ this._uuid.temperature, this._uuid.accelerometer, this._uuid.humidity ] }],\n                    optionalServices: [ this._uuid.temperature, this._uuid.accelerometer, this._uuid.humidity ] })\n                .then(device => {\n                    console.log('Got device:', device);\n                    console.log('id:', device.id);\n                    var connected = Promise.resolve();\n                    if (!device.connected) {\n                        connected = device.gatt.connect();\n                    }\n                    this.device = device;\n                    return connected;\n                })\n                .then(server => {\n                    console.log('Getting Service…', server);\n                    //return server.getPrimaryService('f000aa10-0451-4000-b000-000000000000');\n                })\n                .catch(error => this.onDeviceError(error));\n        }\n    }\n\n    /**\n     * on device requested success\n     * @param device\n     */\n    onDeviceRequestedSuccess(device) {\n        this.connected = device.gatt.connect();\n    }\n\n    /**\n     * on device requested error\n     * @param device\n     */\n    onDeviceError(err) {\n        console.log(err);\n    }\n}","/**\n * Heavily lifted from WebVR-Polyfill project by Boris Smus: https://github.com/borismus/webvr-polyfill\n * but refactored to use different data source provided over BLE by the TI Sensor Tag\n *\n * This piece in particular was also pulled by Boris from ThreeJS math\n *\n * original license from WebVR-Polyfill is as follows:\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport Vector3 from './vector3.es6';\n\nexport default class {\n    constructor( x, y, z, w ) {\n        this.x = x || 0;\n        this.y = y || 0;\n        this.z = z || 0;\n        this.w = ( w !== undefined ) ? w : 1;\n    }\n\n    set( x, y, z, w ) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n\n        return this;\n    }\n\n    copy( quaternion ) {\n        this.x = quaternion.x;\n        this.y = quaternion.y;\n        this.z = quaternion.z;\n        this.w = quaternion.w;\n\n        return this;\n    }\n\n    setFromEulerXYZ( x, y, z ) {\n        var c1 = Math.cos( x / 2 );\n        var c2 = Math.cos( y / 2 );\n        var c3 = Math.cos( z / 2 );\n        var s1 = Math.sin( x / 2 );\n        var s2 = Math.sin( y / 2 );\n        var s3 = Math.sin( z / 2 );\n\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\n        this.z = c1 * c2 * s3 + s1 * s2 * c3;\n        this.w = c1 * c2 * c3 - s1 * s2 * s3;\n\n        return this;\n    }\n\n    setFromEulerYXZ( x, y, z ) {\n        var c1 = Math.cos( x / 2 );\n        var c2 = Math.cos( y / 2 );\n        var c3 = Math.cos( z / 2 );\n        var s1 = Math.sin( x / 2 );\n        var s2 = Math.sin( y / 2 );\n        var s3 = Math.sin( z / 2 );\n\n        this.x = s1 * c2 * c3 + c1 * s2 * s3;\n        this.y = c1 * s2 * c3 - s1 * c2 * s3;\n        this.z = c1 * c2 * s3 - s1 * s2 * c3;\n        this.w = c1 * c2 * c3 + s1 * s2 * s3;\n\n        return this;\n    }\n\n    setFromAxisAngle( axis, angle ) {\n        // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n        // assumes axis is normalized\n\n        var halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n        this.x = axis.x * s;\n        this.y = axis.y * s;\n        this.z = axis.z * s;\n        this.w = Math.cos( halfAngle );\n\n        return this;\n    }\n\n    multiply( q ) {\n        return this.multiplyQuaternions( this, q );\n    }\n\n    multiplyQuaternions( a, b ) {\n        // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n        var qax = a.x, qay = a.y, qaz = a.z, qaw = a.w;\n        var qbx = b.x, qby = b.y, qbz = b.z, qbw = b.w;\n\n        this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n        this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n        this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n        this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n        return this;\n    }\n\n    inverse() {\n        this.x *= -1;\n        this.y *= -1;\n        this.z *= -1;\n\n        this.normalize();\n\n        return this;\n    }\n\n    normalize() {\n        var l = Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n        if ( l === 0 ) {\n            this.x = 0;\n            this.y = 0;\n            this.z = 0;\n            this.w = 1;\n        } else {\n            l = 1 / l;\n\n            this.x = this.x * l;\n            this.y = this.y * l;\n            this.z = this.z * l;\n            this.w = this.w * l;\n        }\n\n        return this;\n    }\n\n    slerp( qb, t ) {\n        if ( t === 0 ) return this;\n        if ( t === 1 ) return this.copy( qb );\n\n        var x = this.x, y = this.y, z = this.z, w = this.w;\n\n        // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n        var cosHalfTheta = w * qb.w + x * qb.x + y * qb.y + z * qb.z;\n\n        if ( cosHalfTheta < 0 ) {\n            this.w = - qb.w;\n            this.x = - qb.x;\n            this.y = - qb.y;\n            this.z = - qb.z;\n\n            cosHalfTheta = - cosHalfTheta;\n        } else {\n            this.copy( qb );\n        }\n\n        if ( cosHalfTheta >= 1.0 ) {\n            this.w = w;\n            this.x = x;\n            this.y = y;\n            this.z = z;\n\n            return this;\n        }\n\n        var halfTheta = Math.acos( cosHalfTheta );\n        var sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n        if ( Math.abs( sinHalfTheta ) < 0.001 ) {\n            this.w = 0.5 * ( w + this.w );\n            this.x = 0.5 * ( x + this.x );\n            this.y = 0.5 * ( y + this.y );\n            this.z = 0.5 * ( z + this.z );\n\n            return this;\n        }\n\n        var ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n            ratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n        this.w = ( w * ratioA + this.w * ratioB );\n        this.x = ( x * ratioA + this.x * ratioB );\n        this.y = ( y * ratioA + this.y * ratioB );\n        this.z = ( z * ratioA + this.z * ratioB );\n\n        return this;\n    }\n\n    setFromUnitVectors(vFrom, vTo) {\n        // http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n        // assumes direction vectors vFrom and vTo are normalized\n        var v1, r;\n        var EPS = 0.000001;\n\n        if (v1 === undefined) v1 = new Vector3();\n\n        r = vFrom.dot(vTo) + 1;\n\n        if (r < EPS) {\n            r = 0;\n\n            if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n                v1.set(-vFrom.y, vFrom.x, 0);\n            } else {\n                v1.set(0, -vFrom.z, vFrom.y);\n            }\n        } else {\n            v1.crossVectors(vFrom, vTo);\n        }\n\n        this.x = v1.x;\n        this.y = v1.y;\n        this.z = v1.z;\n        this.w = r;\n\n        this.normalize();\n    }\n}","/**\n * Heavily lifted from WebVR-Polyfill project by Boris Smus: https://github.com/borismus/webvr-polyfill\n * but refactored to use different data source provided over BLE by the TI Sensor Tag\n *\n * This piece in particular was also pulled by Boris from ThreeJS math\n *\n * original license from WebVR-Polyfill is as follows:\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport default {\n    degToRad: Math.PI / 180,\n    radToDeg: 180 / Math.PI,\n    MIN_TIMESTEP: 0.001,\n    MAX_TIMESTEP: 1,\n\n    // Helper method to validate the time steps of sensor timestamps.\n    isTimestampDeltaValid: function(timestampDeltaS) {\n        if (isNaN(timestampDeltaS)) {\n            return false;\n        }\n        if (timestampDeltaS <= this.MIN_TIMESTEP) {\n            return false;\n        }\n        if (timestampDeltaS > this.MAX_TIMESTEP) {\n            return false;\n        }\n        return true;\n    }\n}","/**\n * Heavily lifted from WebVR-Polyfill project by Boris Smus: https://github.com/borismus/webvr-polyfill\n * but refactored to use different data source provided over BLE by the TI Sensor Tag\n *\n * This piece in particular was also pulled by Boris from ThreeJS math\n *\n * original license from WebVR-Polyfill is as follows:\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class {\n    constructor(x, y, z) {\n        this.x = x || 0;\n        this.y = y || 0;\n        this.z = z || 0;\n    }\n\n    set( x, y, z ) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n\n        return this;\n    }\n\n    copy( v ) {\n        this.x = v.x;\n        this.y = v.y;\n        this.z = v.z;\n\n        return this;\n    }\n\n    length() {\n        return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n    }\n\n    normalize() {\n        var scalar = this.length();\n\n        if ( scalar !== 0 ) {\n            var invScalar = 1 / scalar;\n\n            this.multiplyScalar(invScalar);\n        } else {\n            this.x = 0;\n            this.y = 0;\n            this.z = 0;\n        }\n\n        return this;\n    }\n\n    multiplyScalar( scalar ) {\n        this.x *= scalar;\n        this.y *= scalar;\n        this.z *= scalar;\n    }\n\n    applyQuaternion( q ) {\n        var x = this.x;\n        var y = this.y;\n        var z = this.z;\n\n        var qx = q.x;\n        var qy = q.y;\n        var qz = q.z;\n        var qw = q.w;\n\n        // calculate quat * vector\n        var ix =  qw * x + qy * z - qz * y;\n        var iy =  qw * y + qz * x - qx * z;\n        var iz =  qw * z + qx * y - qy * x;\n        var iw = - qx * x - qy * y - qz * z;\n\n        // calculate result * inverse quat\n        this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n        this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n        this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n        return this;\n    }\n\n    dot( v ) {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n\n    crossVectors( a, b ) {\n        var ax = a.x, ay = a.y, az = a.z;\n        var bx = b.x, by = b.y, bz = b.z;\n\n        this.x = ay * bz - az * by;\n        this.y = az * bx - ax * bz;\n        this.z = ax * by - ay * bx;\n\n        return this;\n    }\n};","/**\n * Heavily lifted from WebVR-Polyfill project by Boris Smus: https://github.com/borismus/webvr-polyfill\n * but refactored to use different data source provided over BLE by the TI Sensor Tag\n *\n * original license from WebVR-Polyfill is as follows:\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * TODO: Fix up all \"new THREE\" instantiations to improve performance.\n */\nimport SensorSample from './sensor-sample.es6';\nimport Quaternion from  '../math/quaternion.es6';\nimport Vector3 from  '../math/vector3.es6';\nimport MathUtil from '../math/util.es6';\n\n/**\n * An implementation of a simple complementary filter, which fuses gyroscope and\n * accelerometer data from the 'devicemotion' event.\n *\n * Accelerometer data is very noisy, but stable over the long term.\n * Gyroscope data is smooth, but tends to drift over the long term.\n *\n * This fusion is relatively simple:\n * 1. Get orientation estimates from accelerometer by applying a low-pass filter\n *    on that data.\n * 2. Get orientation estimates from gyroscope by integrating over time.\n * 3. Combine the two estimates, weighing (1) in the long term, but (2) for the\n *    short term.\n */\n\nexport default class {\n    constructor(kFilter) {\n        this.kFilter = kFilter;\n\n        // Raw sensor measurements.\n        this.currentAccelMeasurement = new SensorSample();\n        this.currentGyroMeasurement = new SensorSample();\n        this.previousGyroMeasurement = new SensorSample();\n\n        // Current filter orientation\n        this.filterQ = new Quaternion();\n        this.previousFilterQ = new Quaternion();\n\n        // Orientation based on the accelerometer.\n        this.accelQ = new Quaternion();\n        // Whether or not the orientation has been initialized.\n        this.isOrientationInitialized = false;\n        // Running estimate of gravity based on the current orientation.\n        this.estimatedGravity = new Vector3();\n        // Measured gravity based on accelerometer.\n        this.measuredGravity = new Vector3();\n\n        // Debug only quaternion of gyro-based orientation.\n        this.gyroIntegralQ = new Quaternion();\n    }\n\n\n    addAccelMeasurement(vector, timestampS) {\n        this.currentAccelMeasurement.set(vector, timestampS);\n    }\n\n    addGyroMeasurement(vector, timestampS) {\n        this.currentGyroMeasurement.set(vector, timestampS);\n\n        var deltaT = timestampS - this.previousGyroMeasurement.timestampS;\n        if (MathUtil.isTimestampDeltaValid(deltaT)) {\n            this.run_();\n        }\n\n        this.previousGyroMeasurement.copy(this.currentGyroMeasurement);\n    }\n\n    run_() {\n        if (!this.isOrientationInitialized) {\n            this.accelQ = this.accelToQuaternion_(this.currentAccelMeasurement.sample);\n            this.previousFilterQ.copy(this.accelQ);\n            this.isOrientationInitialized = true;\n            return;\n        }\n\n        var deltaT = this.currentGyroMeasurement.timestampS -\n            this.previousGyroMeasurement.timestampS;\n\n        // Convert gyro rotation vector to a quaternion delta.\n        var gyroDeltaQ = this.gyroToQuaternionDelta_(this.currentGyroMeasurement.sample, deltaT);\n        this.gyroIntegralQ.multiply(gyroDeltaQ);\n\n        // filter_1 = K * (filter_0 + gyro * dT) + (1 - K) * accel.\n        this.filterQ.copy(this.previousFilterQ);\n        this.filterQ.multiply(gyroDeltaQ);\n\n        // Calculate the delta between the current estimated gravity and the real\n        // gravity vector from accelerometer.\n        var invFilterQ = new Quaternion();\n        invFilterQ.copy(this.filterQ);\n        invFilterQ.inverse();\n\n        this.estimatedGravity.set(0, 0, -1);\n        this.estimatedGravity.applyQuaternion(invFilterQ);\n        this.estimatedGravity.normalize();\n\n        this.measuredGravity.copy(this.currentAccelMeasurement.sample);\n        this.measuredGravity.normalize();\n\n        // Compare estimated gravity with measured gravity, get the delta quaternion\n        // between the two.\n        var deltaQ = new Quaternion();\n        deltaQ.setFromUnitVectors(this.estimatedGravity, this.measuredGravity);\n        deltaQ.inverse();\n\n        /*if (DEBUG) {\n            console.log('Delta: %d deg, G_est: (%s, %s, %s), G_meas: (%s, %s, %s)',\n                MathUtil.radToDeg * Util.getQuaternionAngle(deltaQ),\n                (this.estimatedGravity.x).toFixed(1),\n                (this.estimatedGravity.y).toFixed(1),\n                (this.estimatedGravity.z).toFixed(1),\n                (this.measuredGravity.x).toFixed(1),\n                (this.measuredGravity.y).toFixed(1),\n                (this.measuredGravity.z).toFixed(1));\n        }*/\n\n        // Calculate the SLERP target: current orientation plus the measured-estimated\n        // quaternion delta.\n        var targetQ = new Quaternion();\n        targetQ.copy(this.filterQ);\n        targetQ.multiply(deltaQ);\n\n        // SLERP factor: 0 is pure gyro, 1 is pure accel.\n        this.filterQ.slerp(targetQ, 1 - this.kFilter);\n\n        this.previousFilterQ.copy(this.filterQ);\n    }\n\n    getOrientation() {\n        return this.filterQ;\n    }\n\n    accelToQuaternion_(accel) {\n        var normAccel = new Vector3();\n        normAccel.copy(accel);\n        normAccel.normalize();\n        var quat = new Quaternion();\n        quat.setFromUnitVectors(new Vector3(0, 0, -1), normAccel);\n        quat.inverse();\n        return quat;\n    }\n\n    gyroToQuaternionDelta_(gyro, dt) {\n        // Extract axis and angle from the gyroscope data.\n        var quat = new Quaternion();\n        var axis = new Vector3();\n        axis.copy(gyro);\n        axis.normalize();\n        quat.setFromAxisAngle(axis, gyro.length() * dt);\n        return quat;\n    }\n}","export default {\n    K_FILTER: 0.98, // Default: 0.98.\n\n    // How far into the future to predict during fast motion (in seconds).\n    PREDICTION_TIME_S: 0.040, // Default: 0.040.\n\n    YAW_ONLY: true\n}","/**\n * Heavily lifted from WebVR-Polyfill project by Boris Smus: https://github.com/borismus/webvr-polyfill\n * but refactored to use different data source provided over BLE by the TI Sensor Tag\n *\n * original license from WebVR-Polyfill is as follows:\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport ComplementaryFilter from './complementary-filter.es6';\nimport PosePredictor from './pose-predictor.es6';\n//import TouchPanner from '../touch-panner.es6';\nimport MathUtil from '../math/util.es6';\nimport Vector3 from '../math/vector3.es6';\nimport Quaternion from '../math/quaternion.es6';\nimport Config from './config.es6';\n\n/**\n * The pose sensor, implemented using DeviceMotion APIs.\n */\nexport default class {\n    constructor() {\n        this.accelerometer = new Vector3();\n        this.gyroscope = new Vector3();\n\n        this.filter = new ComplementaryFilter(Config.K_FILTER);\n        this.posePredictor = new PosePredictor(Config.PREDICTION_TIME_S);\n\n        this.filterToWorldQ = new Quaternion();\n        this.filterToWorldQ.setFromAxisAngle(new Vector3(1, 0, 0), -Math.PI / 2);\n\n        this.inverseWorldToScreenQ = new Quaternion();\n        this.worldToScreenQ = new Quaternion();\n        this.originalPoseAdjustQ = new Quaternion();\n        this.originalPoseAdjustQ.setFromAxisAngle(new Vector3(0, 0, 1),\n            -window.orientation * Math.PI / 180);\n\n        // Keep track of a reset transform for resetSensor.\n        this.resetQ = new Quaternion();\n\n        this.orientationOut_ = new Float32Array(4);\n    }\n\n    getPosition() {\n        // This PoseSensor doesn't support position\n        return null;\n    }\n\n    getOrientation() {\n        // Convert from filter space to the the same system used by the\n        // deviceorientation event.\n        var orientation = this.filter.getOrientation();\n\n        // Predict orientation.\n        this.predictedQ = this.posePredictor.getPrediction(orientation, this.gyroscope, this.previousTimestampS);\n\n        // Convert to THREE coordinate system: -Z forward, Y up, X right.\n        var out = new Quaternion();\n        out.copy(this.filterToWorldQ);\n        out.multiply(this.resetQ);\n        out.multiply(this.predictedQ);\n        out.multiply(this.worldToScreenQ);\n        \n        this.orientationOut_[0] = out.x;\n        this.orientationOut_[1] = out.y;\n        this.orientationOut_[2] = out.z;\n        this.orientationOut_[3] = out.w;\n        return this.orientationOut_;\n    }\n\n    resetPose() {\n        // Reduce to inverted yaw-only.\n        this.resetQ.copy(this.filter.getOrientation());\n        this.resetQ.x = 0;\n        this.resetQ.y = 0;\n        this.resetQ.z *= -1;\n        this.resetQ.normalize();\n\n        // Take into account original pose.\n        this.resetQ.multiply(this.originalPoseAdjustQ);\n    }\n\n    updateSensorData(data) {\n        var accGravity = data.sensors.accelerometer; //todo: gravity!\n        var rotRate = data.sensors.gyroscope;\n        var timestampS = data.sensors.timestamp / 1000;\n\n        var deltaS = timestampS - this.previousTimestampS;\n        if (deltaS <= MathUtil.MIN_TIMESTEP || deltaS > MathUtil.MAX_TIMESTEP) {\n            console.warn('Invalid timestamps detected. Time step between successive ' +\n                'gyroscope sensor samples is very small or not monotonic', deltaS);\n            this.previousTimestampS = timestampS;\n            return;\n        }\n\n        this.accelerometer.set(-accGravity.x, -accGravity.y, -accGravity.z);\n        this.gyroscope.set(rotRate.alpha, rotRate.beta, rotRate.gamma);\n        this.gyroscope.multiplyScalar(Math.PI / 180);\n\n        this.filter.addAccelMeasurement(this.accelerometer, timestampS);\n        this.filter.addGyroMeasurement(this.gyroscope, timestampS);\n\n        this.previousTimestampS = timestampS;\n    }\n}\n","/**\n * Heavily lifted from WebVR-Polyfill project by Boris Smus: https://github.com/borismus/webvr-polyfill\n * but refactored to use different data source provided over BLE by the TI Sensor Tag\n *\n * original license from WebVR-Polyfill is as follows:\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Quaternion from '../math/quaternion.es6';\nimport Vector3 from '../math/vector3.es6';\nimport MathUtil from '../math/util.es6';\n\n/**\n * Given an orientation and the gyroscope data, predicts the future orientation\n * of the head. This makes rendering appear faster.\n *\n * Also see: http://msl.cs.uiuc.edu/~lavalle/papers/LavYerKatAnt14.pdf\n *\n * @param {Number} predictionTimeS time from head movement to the appearance of\n * the corresponding image.\n */\n\nexport default class {\n    constructor(predictionTimeS) {\n        this.predictionTimeS = predictionTimeS;\n\n        // The quaternion corresponding to the previous state.\n        this.previousQ = new Quaternion();\n        // Previous time a prediction occurred.\n        this.previousTimestampS = null;\n\n        // The delta quaternion that adjusts the current pose.\n        this.deltaQ = new Quaternion();\n        // The output quaternion.\n        this.outQ = new Quaternion();\n    }\n\n    getPrediction(currentQ, gyro, timestampS) {\n        if (!this.previousTimestampS) {\n            this.previousQ.copy(currentQ);\n            this.previousTimestampS = timestampS;\n            return currentQ;\n        }\n\n        // Calculate axis and angle based on gyroscope rotation rate data.\n        var axis = new Vector3();\n        axis.copy(gyro);\n        axis.normalize();\n\n        var angularSpeed = gyro.length();\n\n        // If we're rotating slowly, don't do prediction.\n        if (angularSpeed < MathUtil.degToRad * 20) {\n            //if (DEBUG) {\n                console.log('Moving slowly, at %s deg/s: no prediction',\n                    (MathUtil.radToDeg * angularSpeed).toFixed(1));\n            //}\n            this.outQ.copy(currentQ);\n            this.previousQ.copy(currentQ);\n            return this.outQ;\n        }\n\n        // Get the predicted angle based on the time delta and latency.\n        var deltaT = timestampS - this.previousTimestampS;\n        var predictAngle = angularSpeed * this.predictionTimeS;\n\n        this.deltaQ.setFromAxisAngle(axis, predictAngle);\n        this.outQ.copy(this.previousQ);\n        this.outQ.multiply(this.deltaQ);\n\n        this.previousQ.copy(currentQ);\n\n        return this.outQ;\n    }\n};","/**\n * Heavily lifted from WebVR-Polyfill project by Boris Smus: https://github.com/borismus/webvr-polyfill\n * but refactored to use different data source provided over BLE by the TI Sensor Tag\n *\n * original license from WebVR-Polyfill is as follows:\n * Copyright 2015 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class {\n    constructor(sample, timestampS) {\n        this.set(sample, timestampS);\n    }\n\n    set(sample, timestampS) {\n        this.sample = sample;\n        this.timestampS = timestampS;\n    }\n\n    copy(sensorSample) {\n        this.set(sensorSample.sample, sensorSample.timestampS);\n    };\n}"]}