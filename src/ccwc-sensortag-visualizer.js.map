{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/ccwc-sensortag-visualizer.es6","src/devices/tisensortag.es6"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCAUoB,AAKZ;;;;;iBAAA,AAAK,YAAL,AAAiB,AAOjB;;;;;;;iBAAA,AAAK,YAAL,AAAiB,AAOjB;;;;;;;iBAAA,AAAK,cAAL,AAAmB,AAMnB;;;;;;iBAAA,AAAK,UAAU,CAAA,AAAE,WAAF,AAAa,iBAAb,AAA8B,gBAA7C,AAAe,AAA8C,AAEhE;;;;;;;;;0C,AAMiB,W,AAAW,MAAM,AAC/B;iBAAK,IAAI,IAAT,AAAa,GAAG,IAAI,KAAA,AAAK,QAAzB,AAAiC,QAAjC,AAAyC,KAAK,AAC1C;oBAAI,KAAA,AAAK,QAAQ,KAAA,AAAK,QAAtB,AAAI,AAAa,AAAa,KAAK,AAC/B;wBAAI,KAAA,AAAK,QAAQ,KAAA,AAAK,QAAlB,AAAa,AAAa,IAA9B,AAAkC,QAAQ,AACtC;6BAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAA7B,AAAiC,MAAjC,AAAuC,UAAvC,AAAiD,IAAjD,AAAqD,AACxD;AAED;;wBAAI,KAAA,AAAK,QAAQ,KAAA,AAAK,QAAlB,AAAa,AAAa,IAA9B,AAAkC,SAAS,AACvC;6BAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAA7B,AAAiC,MAAjC,AAAuC,UAAvC,AAAiD,IAAjD,AAAqD,AACxD;AAED;;wBAAA,AAAI,AACJ;4BAAO,KAAA,AAAK,QAAZ,AAAO,AAAa,AAChB;6BAAA,AAAK,AACD;yCAAA,AAAa,AACb;AACJ;6BAAA,AAAK,AACD;yCAAA,AAAa,AACb;AACJ;6BAAA,AAAK,AACD;yCAAA,AAAa,AACb;AATR,AAYA;;;wBAAI,KAAA,AAAK,QAAL,AAAa,OAAjB,AAAwB,WAAW,AAC/B;4BAAI,KAAA,AAAK,QAAL,AAAa,QAAjB,AAAyB,MAAM,AAC3B;iCAAA,AAAK,IAAL,AAAS,OAAT,AAAgB,QAAhB,AAAwB,KAAxB,AAA6B,UAA7B,AAAuC,IAAvC,AAA2C,AAC9C;AAFD,+BAEO,AACH;iCAAA,AAAK,IAAL,AAAS,OAAT,AAAgB,QAAhB,AAAwB,KAAxB,AAA6B,UAA7B,AAAuC,OAAvC,AAA8C,AACjD;AAED;;4BAAI,KAAA,AAAK,QAAL,AAAa,QAAjB,AAAyB,OAAO,AAC5B;iCAAA,AAAK,IAAL,AAAS,OAAT,AAAgB,QAAhB,AAAwB,MAAxB,AAA8B,UAA9B,AAAwC,IAAxC,AAA4C,AAC/C;AAFD,+BAEO,AACH;iCAAA,AAAK,IAAL,AAAS,OAAT,AAAgB,QAAhB,AAAwB,MAAxB,AAA8B,UAA9B,AAAwC,OAAxC,AAA+C,AAClD;AACJ;AAZD,2BAYO,AACH;4BAAI,OAAO,CAAA,AAAC,KAAD,AAAM,KAAjB,AAAW,AAAW,AACtB;6BAAK,IAAI,IAAT,AAAa,GAAG,IAAI,KAApB,AAAyB,QAAzB,AAAiC,KAAM,AACnC;gCAAI,MAAM,WAAW,KAAA,AAAK,QAAQ,KAAA,AAAK,QAAlB,AAAa,AAAa,IAAI,KAAnD,AAAU,AAAW,AAA8B,AAAK,AACxD;iCAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAAI,KAAjC,AAAiC,AAAK,IAAtC,AAA0C,IAA1C,AAA8C,MAA9C,AAAoD,QAAQ,KAAA,AAAK,IAAI,MAAT,AAAe,cAA3E,AAAyF,AACzF;gCAAI,MAAJ,AAAU,GAAG,AAAE;qCAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAAI,KAAjC,AAAiC,AAAK,IAAtC,AAA0C,IAA1C,AAA8C,MAA9C,AAAoD,kBAAkB,gBAAgB,CAAC,KAAD,AAAC,AAAK,MAAtB,AAA4B,aAAlG,AAA+G,AAAQ;AAAtI,mCACK,AAAE;qCAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAAI,KAAjC,AAAiC,AAAK,IAAtC,AAA0C,IAA1C,AAA8C,MAA9C,AAAoD,kBAApD,AAAsE,AAAS;AACtF;iCAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAAI,KAAjC,AAAiC,AAAK,IAAtC,AAA0C,MAA1C,AAAgD,YAAY,IAAA,AAAI,QAAhE,AAA4D,AAAY,AAC3E;AACJ;AACJ;AACJ;AACJ;;;;;;;;;gC,AAKO,KAAK;yBACT;;gBAAI,CAAJ,AAAK,KAAK,AACN;qBAAA,AAAK,YAAY,kBAAjB,AACH;AACD;iBAAA,AAAK,UAAL,AAAe,QAAS,UAAA,AAAC,WAAD,AAAY,MAAZ;uBAAqB,OAAA,AAAK,kBAAL,AAAuB,WAA5C,AAAqB,AAAkC;AAA/E,eAAsF,KAAtF,AAA2F,AAC9F;;;;;;;;;;0CAMiB,AACd;gBAAI,KAAA,AAAK,aAAT,AAAI,AAAkB,aAAa,AAC/B;qBAAA,AAAK,YAAL,AAAiB,AACpB;AAFD,mBAEO,AACH;qBAAA,AAAK,YAAL,AAAiB,AACpB;AACJ;;;;;;;;;0CAMiB,AACd;iBAAA,AAAK,AACL;iBAAA,AAAK,AACR;;;;;;;;;2CAMkB,AACf;gBAAI,WAAW,KAAA,AAAK,MAAL,AAAW,cAA1B,AAAe,AAAyB,AACxC;gBAAI,QAAQ,SAAA,AAAS,QAAT,AAAiB,UAA7B,AAAY,AAA2B,AACvC;iBAAA,AAAK,OAAO,KAAZ,AAAY,AAAK,AACjB;iBAAA,AAAK,KAAL,AAAU,YAAV,AAAsB,AAEtB;;iBAAA,AAAK,MAAM,EAAE,QAAb,AAAW,AAAU,AACrB;iBAAK,IAAI,IAAT,AAAa,GAAG,IAAI,KAAA,AAAK,QAAzB,AAAiC,QAAjC,AAAyC,KAAK,AAC1C;oBAAA,AAAI,AACJ;oBAAA,AAAI,AACJ;wBAAQ,KAAA,AAAK,QAAb,AAAQ,AAAa,AACjB;yBAAA,AAAK,AACD;wCAAgB,KAAA,AAAK,MAAL,AAAW,cAA3B,AAAgB,AAAyB,AACzC;qCAAa,cAAA,AAAc,QAAd,AAAsB,UAAnC,AAAa,AAAgC,AAC7C;6BAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,MAA7B,AAAmC,AACnC;6BAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAA7B,AAAiC,OAAO,WAAA,AAAW,cAAnD,AAAwC,AAAyB,AACjE;6BAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAA7B,AAAiC,QAAQ,WAAA,AAAW,cAApD,AAAyC,AAAyB,AAClE;AAEJ;;AACI;wCAAgB,KAAA,AAAK,MAAL,AAAW,cAA3B,AAAgB,AAAyB,AACzC;qCAAa,cAAA,AAAc,QAAd,AAAsB,UAAnC,AAAa,AAAgC,AAC7C;6BAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,MAA7B,AAAmC,AACnC;6BAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAA7B,AAAiC,IAAjC,AAAqC,AACrC;6BAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAA7B,AAAiC,EAAjC,AAAmC,QAAQ,WAAA,AAAW,cAAtD,AAA2C,AAAyB,AACpE;6BAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAA7B,AAAiC,EAAjC,AAAmC,MAAM,WAAA,AAAW,cAApD,AAAyC,AAAyB,AAClE;6BAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAA7B,AAAiC,IAAjC,AAAqC,AACrC;6BAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAA7B,AAAiC,EAAjC,AAAmC,QAAQ,WAAA,AAAW,cAAtD,AAA2C,AAAyB,AACpE;6BAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAA7B,AAAiC,EAAjC,AAAmC,MAAM,WAAA,AAAW,cAApD,AAAyC,AAAyB,AAClE;6BAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAA7B,AAAiC,IAAjC,AAAqC,AACrC;6BAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAA7B,AAAiC,EAAjC,AAAmC,QAAQ,WAAA,AAAW,cAAtD,AAA2C,AAAyB,AACpE;6BAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAA7B,AAAiC,EAAjC,AAAmC,MAAM,WAAA,AAAW,cArB5D,AAqBQ,AAAyC,AAAyB,AAG1E;;;2BAAA,AAAW,cAAX,AAAyB,WAAzB,AAAoC,YAAY,KAAA,AAAK,QAArD,AAAgD,AAAa,AAC7D;qBAAA,AAAK,IAAL,AAAS,OAAO,KAAA,AAAK,QAArB,AAAgB,AAAa,IAA7B,AAAiC,QAAQ,WAAA,AAAW,cAApD,AAAyC,AAAyB,AAClE;qBAAA,AAAK,KAAL,AAAU,YAAV,AAAsB,AACzB;AACJ;;;;;;;;;;2CAMkB,AAAE;;;;;;;;;;;iD,AAUI,M,AAAM,Q,AAAQ,QAAQ,AAAE;;;;E,AAjLxB;;;;;;;;;;;;;;;;;;;;;;;;;;;yBCJzB;sBAAc;8BAKV;;;;;;aAAA,AAAK,SAAL,AAAc,AAMd;;;;;;aAAA,AAAK,aAAL,AAAkB,AAOlB;;;;;;;aAAA,AAAK,kBAAL,AAAuB,AAKvB;;;;;aAAA,AAAK,YAAY,CAAA,AAAC,QAAlB,AAAiB,AAAS,AAO1B;;;;;;;aAAA,AAAK,QAAL,AAAa,AACb;aAAA,AAAK,MAAL,AAAW,cAAc,KAAA,AAAK,UAAL,AAAe,KAAf,AAAoB,SAAS,KAAA,AAAK,UAA3D,AAAsD,AAAe,AACrE;aAAA,AAAK,MAAL,AAAW,kBAAkB,KAAA,AAAK,UAAL,AAAe,KAAf,AAAoB,SAAS,KAAA,AAAK,UAA/D,AAA0D,AAAe,AACzE;aAAA,AAAK,MAAL,AAAW,2BAA2B,KAAA,AAAK,UAAL,AAAe,KAAf,AAAoB,SAAS,KAAA,AAAK,UAAxE,AAAmE,AAAe,AAClF;aAAA,AAAK,MAAL,AAAW,oBAAoB,KAAA,AAAK,UAAL,AAAe,KAAf,AAAoB,SAAS,KAAA,AAAK,UAAjE,AAA4D,AAAe,AAE3E;;aAAA,AAAK,MAAL,AAAW,gBAAgB,KAAA,AAAK,UAAL,AAAe,KAAf,AAAoB,SAAS,KAAA,AAAK,UAA7D,AAAwD,AAAe,AACvE;aAAA,AAAK,MAAL,AAAW,oBAAoB,KAAA,AAAK,UAAL,AAAe,KAAf,AAAoB,SAAS,KAAA,AAAK,UAAjE,AAA4D,AAAe,AAC3E;aAAA,AAAK,MAAL,AAAW,6BAA6B,KAAA,AAAK,UAAL,AAAe,KAAf,AAAoB,SAAS,KAAA,AAAK,UAA1E,AAAqE,AAAe,AACpF;aAAA,AAAK,MAAL,AAAW,sBAAsB,KAAA,AAAK,UAAL,AAAe,KAAf,AAAoB,SAAS,KAAA,AAAK,UAAnE,AAA8D,AAAe,AAE7E;;aAAA,AAAK,MAAL,AAAW,WAAW,KAAA,AAAK,UAAL,AAAe,KAAf,AAAoB,SAAS,KAAA,AAAK,UAAxD,AAAmD,AAAe,AAClE;aAAA,AAAK,MAAL,AAAW,eAAe,KAAA,AAAK,UAAL,AAAe,KAAf,AAAoB,SAAS,KAAA,AAAK,UAA5D,AAAuD,AAAe,AACtE;aAAA,AAAK,MAAL,AAAW,wBAAwB,KAAA,AAAK,UAAL,AAAe,KAAf,AAAoB,SAAS,KAAA,AAAK,UAArE,AAAgE,AAAe,AAC/E;aAAA,AAAK,MAAL,AAAW,iBAAiB,KAAA,AAAK,UAAL,AAAe,KAAf,AAAoB,SAAS,KAAA,AAAK,UAA9D,AAAyD,AAAe,AAC3E;;;;;;;;;;;gC,AAOO,I,AAAI,UAAU;wBAClB;;iBAAA,AAAK,gBAAL,AAAqB,KAArB,AAA0B,AAC1B;gBAAI,KAAJ,AAAS,YAAY,AAAE;AAAS;AAChC;iBAAA,AAAK,YAAL,AAAiB,AACjB;gBAAA,AAAI,UAAU,AACV;4BAAa,YAAM,AACf;uBAAA,AAAG,UAAU,MAAb,AAAa,AAAK,AACrB;AAFD,mBAAA,AAEG,AAEH;;4BAAa,YAAM,AACf;uBAAA,AAAG,UAAU,MAAb,AAAa,AAAK,AACrB;AAFD,mBAEG,KAAA,AAAK,WAAL,AAAgB,QAFnB,AAE2B,AAC9B;AARD,uBAQW,CAAC,UAAL,AAAe,WAAW,AAC7B;wBAAA,AAAQ,IAAR,AAAY,AACZ;qBAAA,AAAK,SAAS,IAAA,AAAI,UAAlB,AAAc,AAAc,AAC5B;qBAAA,AAAK,OAAL,AAAY,UAAU,UAAA,AAAU,OAAO,AAAE;4BAAA,AAAQ,IAAI,qBAAZ,AAAiC,AAAS;AAAnF,AAEA;;qBAAA,AAAK,OAAL,AAAY,YAAY,UAAA,AAAC,GAAM,AAC3B;wBAAI,MAAM,KAAA,AAAK,MAAM,EAArB,AAAU,AAAa,AACvB;yBAAK,IAAI,IAAT,AAAa,GAAG,IAAI,MAAA,AAAK,gBAAzB,AAAyC,QAAzC,AAAiD,KAAK,AAClD;8BAAA,AAAK,gBAAL,AAAqB,GAArB,AAAwB,UAAxB,AAAkC,AACrC;AACJ;AALD,AAOA;;qBAAA,AAAK,OAAL,AAAY,SAAS,UAAA,AAAC,GAAM,AACxB;0BAAA,AAAK,OAAL,AAAY,KAAZ,AAAiB,AACpB;AAFD,AAIH;AAhBM,aAAA,MAgBA,AACH;0BAAA,AAAU,UAAV,AAAoB,cAChB,EAAI,SAAS,CAAE,EAAC,MAAH,AAAE,AAAO,eAAc,EAAE,UAAU,CAAE,KAAA,AAAK,MAAP,AAAa,aAAa,KAAA,AAAK,MAA/B,AAAqC,eAAe,KAAA,AAAK,MAAzG,AAAa,AAAuB,AAAY,AAA+D,AAC3G;sCAAkB,CAAE,KAAA,AAAK,MAAP,AAAa,aAAa,KAAA,AAAK,MAA/B,AAAqC,eAAe,KAAA,AAAK,MAFnF,AACI,AACsB,AAA+D,aAFzF,AAGK,KAAK,kBAAU,AACZ;4BAAA,AAAQ,IAAR,AAAY,eAAZ,AAA2B,AAC3B;4BAAA,AAAQ,IAAR,AAAY,OAAO,OAAnB,AAA0B,AAC1B;wBAAI,YAAY,QAAhB,AAAgB,AAAQ,AACxB;wBAAI,CAAC,OAAL,AAAY,WAAW,AACnB;oCAAY,OAAA,AAAO,KAAnB,AAAY,AAAY,AAC3B;AACD;0BAAA,AAAK,SAAL,AAAc,AACd;2BAAA,AAAO,AACV;AAZL,mBAAA,AAaK,KAAK,kBAAU,AACZ;4BAAA,AAAQ,IAAR,AAAY,oBAAZ,AAAgC,AAEnC;;AAhBL,mBAAA,AAiBK,MAAM,iBAAA;2BAAS,MAAA,AAAK,cAAd,AAAS,AAAmB;AAjBvC,AAkBH;AACJ;;;;;;;;;8CAKqB,AAClB;;2BAAO,AACQ,AACX;;8BAAQ,AACM,AACV;8BAFI,AAEM,AACV;kCALD,AAEK,AAGU,AAElB;AALQ,AACJ;;;gCAKe,AACH,AACR;iCAFW,AAEF,AACT;2BAAG,OAAO,IAAI,KAAA,AAAK,WAHR,AAGR,AAA2B,AAC9B;2BAAG,OAAO,IAAI,KAAA,AAAK,WAJR,AAIR,AAA2B,AAC9B;2BAAG,OAAO,IAAI,KAAA,AAAK,WANlB,AACU,AAKR,AAA2B,AAElC;AAPe,AACX;;gCAMU,AACF,AACR;iCAFU,AAED,AACT;2BAAG,OAAO,IAAI,KAAA,AAAK,WAHT,AAGP,AAA2B,AAC9B;2BAAG,OAAO,IAAI,KAAA,AAAK,WAJT,AAIP,AAA2B,AAC9B;2BAAG,OAAO,IAAI,KAAA,AAAK,WAblB,AAQS,AAKP,AAA2B,AAElC;AAPc,AACV;;gCAMO,AACC,AACR;iCAFO,AAEE,AACT;2BAAG,OAAO,IAAI,KAAA,AAAK,WAHZ,AAGJ,AAA2B,AAC9B;2BAAG,OAAO,IAAI,KAAA,AAAK,WAJZ,AAIJ,AAA2B,AAC9B;2BAAG,OAAO,IAAI,KAAA,AAAK,WA3B/B,AAAO,AAOM,AAeM,AAKJ,AAA2B,AAI7C;AATsB,AACP;AAhBC,AACL;AARD,AACH;;;;;;;;;8CAmCc,AAClB;gBAAI,OAAO,KAAX,AAAW,AAAK,AAChB;iBAAA,AAAK,QAAL,AAAa,UAAU,EAAE,QAAF,AAAU,MAAM,SAAvC,AAAuB,AAAyB,AAChD;iBAAA,AAAK,QAAL,AAAa,QAAb,AAAqB,OAAO,KAAA,AAAK,WAAjC,AAA4C,AAC5C;iBAAA,AAAK,QAAL,AAAa,QAAb,AAAqB,QAAQ,KAAA,AAAK,WAAlC,AAA6C,AAC7C;mBAAA,AAAO,AACV;;;;;;;;;;iD,AAMwB,QAAQ,AAC7B;iBAAA,AAAK,YAAY,OAAA,AAAO,KAAxB,AAAiB,AAAY,AAChC;;;;;;;;;;sC,AAMa,KAAK,AACf;oBAAA,AAAQ,IAAR,AAAY,AACf","file":"ccwc-sensortag-visualizer.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import TISensorTag from './devices/tisensortag.es6';\n\n/**\n * Sensor tag visualizer component\n */\nexport default class extends HTMLElement {\n    /**\n     * initialize default class properties\n     * @private\n     */\n    setProperties() {\n        /**\n         * sensor tag BLE\n         * @type {$ES6_ANONYMOUS_CLASS$}\n         */\n        this.sensorTag = null;\n\n        /**\n         * use fake (simlated) data\n         * @type {boolean}\n         * @private\n         */\n        this._simulate = false;\n\n        /**\n         * device info\n         * @type {boolean}\n         * @private\n         */\n        this._deviceInfo = {};\n\n        /**\n         * list of props with XYZ characteristics\n         * @type {string[]}\n         */\n        this.sensors = [ 'buttons', 'accelerometer', 'magnetometer', 'gyroscope' ];\n\n    };\n\n    /**\n     * on sensortag update\n     * @param data\n     */\n    onSensorTagUpdate(eventtype, data) {\n        for (var c = 0; c < this.sensors.length; c++) {\n            if (data.sensors[this.sensors[c]]) {\n                if (data.sensors[this.sensors[c]].active) {\n                    this.dom.panels[this.sensors[c]].panel.classList.add('active');\n                }\n\n                if (data.sensors[this.sensors[c]].enabled) {\n                    this.dom.panels[this.sensors[c]].panel.classList.add('enabled');\n                }\n\n                var multiplier;\n                switch(this.sensors[c]) {\n                    case 'accelerometer':\n                        multiplier = 10;\n                        break;\n                    case 'magnetometer':\n                        multiplier = 1;\n                        break;\n                    case 'gyroscope':\n                        multiplier = .5;\n                        break;\n                }\n\n                if (this.sensors[c] === 'buttons') {\n                    if (data.sensors.buttons.left) {\n                        this.dom.panels.buttons.left.classList.add('on');\n                    } else {\n                        this.dom.panels.buttons.left.classList.remove('on');\n                    }\n\n                    if (data.sensors.buttons.right) {\n                        this.dom.panels.buttons.right.classList.add('on');\n                    } else {\n                        this.dom.panels.buttons.right.classList.remove('on');\n                    }\n                } else {\n                    var axis = ['x', 'y', 'z'];\n                    for (var d = 0; d < axis.length; d++ ) {\n                        var val = parseFloat(data.sensors[this.sensors[c]][axis[d]]);\n                        this.dom.panels[this.sensors[c]][axis[d]].bar.style.width = Math.abs(val * multiplier) + 'px';\n                        if (val < 0) { this.dom.panels[this.sensors[c]][axis[d]].bar.style.WebkitTransform = 'translateX(' + [axis[d]] * multiplier + 'px)'; }\n                        else { this.dom.panels[this.sensors[c]][axis[d]].bar.style.WebkitTransform = 'none'; }\n                        this.dom.panels[this.sensors[c]][axis[d]].label.innerText = val.toFixed(4);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * connect to sensortag\n     */\n    connect(tag) {\n        if (!tag) {\n            this.sensorTag = new TISensorTag();\n        }\n        this.sensorTag.connect( (eventtype, data) => this.onSensorTagUpdate(eventtype, data), this._simulate);\n    }\n\n    /**\n     * parse attributes on element\n     * @private\n     */\n    parseAttributes() {\n        if (this.hasAttribute('simulate')) {\n            this._simulate = true;\n        } else {\n            this._simulate = false;\n        }\n    };\n\n    /**\n     * element created callback\n     * @private\n     */\n    createdCallback() {\n        this.setProperties();\n        this.parseAttributes();\n    };\n\n    /**\n     * element attached callback\n     * @private\n     */\n    attachedCallback() {\n        let template = this.owner.querySelector('template#style');\n        let clone = template.content.cloneNode(true);\n        this.root = this.createShadowRoot();\n        this.root.appendChild(clone);\n\n        this.dom = { panels: {} };\n        for (var c = 0; c < this.sensors.length; c++) {\n            var paneltemplate;\n            var panelclone;\n            switch (this.sensors[c]) {\n                case 'buttons':\n                    paneltemplate = this.owner.querySelector('template#buttons');\n                    panelclone = paneltemplate.content.cloneNode(true);\n                    this.dom.panels[this.sensors[c]] = {};\n                    this.dom.panels[this.sensors[c]].left = panelclone.querySelector('.left.button');\n                    this.dom.panels[this.sensors[c]].right = panelclone.querySelector('.right.button');\n                    break;\n\n                default:\n                    paneltemplate = this.owner.querySelector('template#sensor');\n                    panelclone = paneltemplate.content.cloneNode(true);\n                    this.dom.panels[this.sensors[c]] = {};\n                    this.dom.panels[this.sensors[c]].x = {};\n                    this.dom.panels[this.sensors[c]].x.label = panelclone.querySelector('.x.label .value');\n                    this.dom.panels[this.sensors[c]].x.bar = panelclone.querySelector('.x.bar');\n                    this.dom.panels[this.sensors[c]].y = {};\n                    this.dom.panels[this.sensors[c]].y.label = panelclone.querySelector('.y.label .value');\n                    this.dom.panels[this.sensors[c]].y.bar = panelclone.querySelector('.y.bar');\n                    this.dom.panels[this.sensors[c]].z = {};\n                    this.dom.panels[this.sensors[c]].z.label = panelclone.querySelector('.z.label .value');\n                    this.dom.panels[this.sensors[c]].z.bar = panelclone.querySelector('.z.bar');\n            }\n\n            panelclone.querySelector('.header').innerText = this.sensors[c];\n            this.dom.panels[this.sensors[c]].panel = panelclone.querySelector('.group');\n            this.root.appendChild(panelclone);\n        }\n    }\n\n    /**\n     * element detached callback\n     * @private\n     */\n    detachedCallback() {};\n\n\n    /**\n     * attributeChangedCallback\n     * @private\n     * @param {String} attr attribute changed\n     * @param {*} oldVal old value\n     * @param {*} newVal new value\n     */\n    attributeChangedCallback(attr, oldVal, newVal) {};\n}","export default class {\n    constructor() {\n        /**\n         * socket connection\n         * @type {null}\n         */\n        this.socket = null;\n\n        /**\n         * if already connected\n         * @type {Boolean}\n         */\n        this._connected = false;\n\n        /**\n         * event listeners\n         * @type {Array}\n         * @private\n         */\n        this._eventListeners = [];\n\n        /**\n         * base UUID\n         */\n        this._baseUUID = ['f000', '-0451-4000-b000-000000000000'];\n\n        /**\n         * service UUIDS\n         * @type {{}}\n         * @private\n         */\n        this._uuid = {};\n        this._uuid.temperature = this._baseUUID[0] + 'aa00' + this._baseUUID[1];\n        this._uuid.temperatureData = this._baseUUID[0] + 'aa01' + this._baseUUID[1];\n        this._uuid.temperatureConfiguration = this._baseUUID[0] + 'aa02' + this._baseUUID[1];\n        this._uuid.temperaturePeriod = this._baseUUID[0] + 'aa03' + this._baseUUID[1];\n\n        this._uuid.accelerometer = this._baseUUID[0] + 'aa10' + this._baseUUID[1];\n        this._uuid.accelerometerData = this._baseUUID[0] + 'aa11' + this._baseUUID[1];\n        this._uuid.accelerometerConfiguration = this._baseUUID[0] + 'aa12' + this._baseUUID[1];\n        this._uuid.accelerometerPeriod = this._baseUUID[0] + 'aa13' + this._baseUUID[1];\n\n        this._uuid.humidity = this._baseUUID[0] + 'aa20' + this._baseUUID[1];\n        this._uuid.humidityData = this._baseUUID[0] + 'aa21' + this._baseUUID[1];\n        this._uuid.humidityConfiguration = this._baseUUID[0] + 'aa22' + this._baseUUID[1];\n        this._uuid.humidityPeriod = this._baseUUID[0] + 'aa23' + this._baseUUID[1];\n    }\n\n    /**\n     * connect to sensortag\n     * @param cb callback\n     * @param {Boolean} simluate data\n     */\n    connect(cb, simulate) {\n        this._eventListeners.push(cb);\n        if (this._connected) { return; }\n        this.connected = true;\n        if (simulate) {\n            setInterval( () => {\n                cb('update', this.getSimulatedSensors());\n            }, 200);\n\n            setInterval( () => {\n                cb('update', this.getSimulatedButtons());\n            }, Math.random() * 10000 + 2000);\n        } else if (!navigator.bluetooth) {\n            console.log('no bluetooth support in your browser, trying websockets from a local node server');\n            this.socket = new WebSocket('ws://localhost:8080');\n            this.socket.onerror = function (error) { console.log('WebSocket Error ' + error); };\n\n            this.socket.onmessage = (e) => {\n                var msg = JSON.parse(e.data);\n                for (var c = 0; c < this._eventListeners.length; c++) {\n                    this._eventListeners[c]('update', msg);\n                }\n            };\n\n            this.socket.onopen = (e) => {\n                this.socket.send('connect');\n            }\n\n        } else {\n            navigator.bluetooth.requestDevice(\n                {   filters: [ {name: 'SensorTag'}, { services: [ this._uuid.temperature, this._uuid.accelerometer, this._uuid.humidity ] }],\n                    optionalServices: [ this._uuid.temperature, this._uuid.accelerometer, this._uuid.humidity ] })\n                .then(device => {\n                    console.log('Got device:', device);\n                    console.log('id:', device.id);\n                    var connected = Promise.resolve();\n                    if (!device.connected) {\n                        connected = device.gatt.connect();\n                    }\n                    this.device = device;\n                    return connected;\n                })\n                .then(server => {\n                    console.log('Getting Service…', server);\n                    //return server.getPrimaryService('f000aa10-0451-4000-b000-000000000000');\n                })\n                .catch(error => this.onDeviceError(error));\n        }\n    }\n\n    /**\n     * get simulated sensor data object\n     */\n    getSimulatedSensors() {\n        return {\n            connected: true,\n            device: {\n                systemid: 'xxxxx',\n                firmware: 'xxxxx',\n                manufacturer: 'xxxxx'\n            },\n            sensors: {\n                accelerometer: {\n                    active: true,\n                    enabled: true,\n                    x: String(3 - Math.random() * 6),\n                    y: String(3 - Math.random() * 6),\n                    z: String(3 - Math.random() * 6)\n                },\n                magnetometer: {\n                    active: true,\n                    enabled: true,\n                    x: String(3 - Math.random() * 6),\n                    y: String(3 - Math.random() * 6),\n                    z: String(3 - Math.random() * 6)\n                },\n                gyroscope: {\n                    active: true,\n                    enabled: true,\n                    x: String(3 - Math.random() * 6),\n                    y: String(3 - Math.random() * 6),\n                    z: String(3 - Math.random() * 6)\n                }\n            }\n        }\n    }\n\n    /**\n     * get simulated button data object\n     */\n    getSimulatedButtons() {\n        var data = this.getSimulatedSensors();\n        data.sensors.buttons = { active: true, enabled: true };\n        data.sensors.buttons.left = Math.random() > .5;\n        data.sensors.buttons.right = Math.random() > .5;\n        return data;\n    }\n\n    /**\n     * on device requested success\n     * @param device\n     */\n    onDeviceRequestedSuccess(device) {\n        this.connected = device.gatt.connect();\n    }\n\n    /**\n     * on device requested error\n     * @param device\n     */\n    onDeviceError(err) {\n        console.log(err);\n    }\n}"]}